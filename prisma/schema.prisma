// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum JobStatus {
  pending
  running
  success
  failed
}

enum TaskEnvStatus {
  active
  inactive
}

model Submission {
  id        Int       @id @default(autoincrement())
  code      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  status    JobStatus @default(pending)

  task   Task @relation(fields: [taskId], references: [id])
  taskId Int
}

model TaskEnv {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  dockerImage String
  status      TaskEnvStatus @default(inactive)

  // TaskEnv 之间的依赖关系呈树状结构
  father     TaskEnv?  @relation("TaskEnvDependency", fields: [fatherName], references: [name])
  fatherName String?
  children   TaskEnv[] @relation("TaskEnvDependency")
  // TaskEnv 与 Task 之间的 Many-to-Many 关系
  Task       Task[]    @relation("TaskEnvTask")
}

model Task {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  submissions Submission[]
  taskEnv     TaskEnv[]    @relation("TaskEnvTask")
}
